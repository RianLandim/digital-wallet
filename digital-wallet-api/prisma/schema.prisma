// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserProvider {
  GOOGLE
  FACEBOOK
}

model User {
  id         String        @id @default(uuid())
  email      String        @unique
  provider   UserProvider?
  providerId String?
  password   String
  name       String
  cpf        String
  earning    Int?
  earningDay Int?
  createdAt  DateTime      @default(now())
  updatedAt  DateTime      @updatedAt

  creditCard CreditCard[]
  launch     Launch[]
  goal       Goal[]
  category   Category[]
}

model CreditCard {
  id          String   @id @default(uuid())
  ownerName   String
  expiratedAt DateTime
  closedAt    DateTime
  user        User     @relation(fields: [userId], references: [id])
  userId      String
  flag        Flag     @relation(fields: [flagId], references: [id])
  flagId      String
  bank        Bank     @relation(fields: [bankId], references: [id])
  bankId      String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id   String @id @default(uuid())
  name String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User      User     @relation(fields: [userId], references: [id])
  userId    String
}

model Bank {
  id    String @id @default(uuid())
  name  String
  image String

  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  CreditCard CreditCard[]
}

model Flag {
  id    String @id @default(uuid())
  name  String
  image String

  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  CreditCard CreditCard[]
}

model Goal {
  id          String   @id @default(uuid())
  value       Int
  limitDate   DateTime
  title       String
  description String
  User        User     @relation(fields: [userId], references: [id])
  userId      String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum LaunchType {
  CREDIT
  DEBIT
}

model Launch {
  id     String     @id @default(uuid())
  value  Float
  type   LaunchType
  user   User       @relation(fields: [userId], references: [id])
  userId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
